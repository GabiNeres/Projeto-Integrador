/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SPRA;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cliente
 */
public class PesquisaAluno extends javax.swing.JFrame {

    /**
     * Creates new form RegistroDeAluno
     */
    public PesquisaAluno() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollBar1 = new javax.swing.JScrollBar();
        jSlider1 = new javax.swing.JSlider();
        jProgressBar1 = new javax.swing.JProgressBar();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jSpinner1 = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtPesqui = new javax.swing.JTextField();
        butRegistrarAluno = new javax.swing.JButton();
        butPesquiAluno = new javax.swing.JButton();
        labelTitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaAluno = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        nomeAdm = new javax.swing.JMenu();
        menuSair = new javax.swing.JMenu();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jFormattedTextField1.setText("jFormattedTextField1");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        txtPesqui.setToolTipText("Pesquise por nome ou matrícula...");
        txtPesqui.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPesquiMouseClicked(evt);
            }
        });
        txtPesqui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquiActionPerformed(evt);
            }
        });

        butRegistrarAluno.setText("Registrar novo Aluno");
        butRegistrarAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRegistrarAlunoActionPerformed(evt);
            }
        });

        butPesquiAluno.setText("PesquisarAluno");
        butPesquiAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butPesquiAlunoActionPerformed(evt);
            }
        });

        labelTitle.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        labelTitle.setText("Sistema para Registro de Autorizações");

        tabelaAluno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Matricula", "Idade", "Turma"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaAluno.getTableHeader().setReorderingAllowed(false);
        tabelaAluno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaAlunoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaAluno);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtPesqui, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(butPesquiAluno)
                        .addGap(100, 100, 100))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(butRegistrarAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(250, 250, 250))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 89, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(labelTitle)
                        .addGap(167, 167, 167))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitle)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesqui, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butPesquiAluno))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(butRegistrarAluno)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        nomeAdm.setText("NomeAdministrador");
        jMenuBar1.add(nomeAdm);

        menuSair.setText("Sair");
        menuSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSairMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuSair);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    Connection conn = null;
    //inicializa a variável de conexão

    User us;

    public User getUs() {
        return us;
    }

    public void setUs(User us) {
        this.us = us;
    }

    public void atualizarMenu() {
        nomeAdm.setText(us.getNome());
    }
    //variavel do tipo user, que vai pegar e mudar os valores e alterar os campos na tela

    private void butRegistrarAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRegistrarAlunoActionPerformed
        RegistroAluno in = new RegistroAluno();
        in.setUs(us);
        in.setVisible(true);
        //abre a tela para registrar um novo aluno
    }//GEN-LAST:event_butRegistrarAlunoActionPerformed

    private void butPesquiAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butPesquiAlunoActionPerformed
        if (txtPesqui.getText().length() != 0) {
            //condição que verifica se o campo está vazio

            DefaultTableModel model = (DefaultTableModel) tabelaAluno.getModel();
            //inicializa e pega o modelo da tabela que vai ser usada

            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            //limpa tabela antes de inserir novos dados

            try {
                conn = Conexao.getConnection();
                //faz a conexão

                Statement stmt = conn.createStatement();
                //faz o statement

                stmt.execute("SELECT * "
                        + "FROM aluno "
                        + "WHERE MatAl like '%" + txtPesqui.getText() + "%' "
                        + "OR NomeAl like '%" + txtPesqui.getText() + "%' ;");
                //comando SELECT de MY SQL para selecionar o aluno

                ResultSet result = stmt.getResultSet();
                //variável que confere os resultados do SELECT

                while (result.next()) {
                    //condição que vê se existe resultado 
                    String nome = result.getString("NomeAl");
                    String matricula = result.getString("MatAl");
                    int idade = result.getInt("Idade");
                    String turma = result.getString("Turma");
                    //variáveis que pegam os resultados

                    Object[] linha = new Object[]{nome, matricula, idade, turma};
                    //vetor do tipo Objeto que pega os resultados para ser inseridos numa linha da tabela

                    model.addRow(linha);
                    //adiciona uma linha com os dados do vetor Objeto
                }
                stmt.close();
                conn.close();
                //fecha as conexoes

            } catch (Exception e) {
                e.printStackTrace();
                //tratamento de exceção
            }
        } else {
            JOptionPane.showMessageDialog(null, "Digite algo na caixa de pesquisa!", "Mensagem",
                    JOptionPane.INFORMATION_MESSAGE);
            //mensagem de erro caso não exista nada para pesquisar
        }
    }//GEN-LAST:event_butPesquiAlunoActionPerformed

    private void txtPesquiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquiActionPerformed

    }//GEN-LAST:event_txtPesquiActionPerformed

    private void txtPesquiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPesquiMouseClicked
        txtPesqui.setText("");
        //limpa o campo de texto quando clicado
    }//GEN-LAST:event_txtPesquiMouseClicked

    private void menuSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSairMouseClicked
        this.setVisible(false);
        Login in = new Login();
        in.setVisible(true);
        //sair da "conta" do administrador e ir para a tela inicial
    }//GEN-LAST:event_menuSairMouseClicked

    private void tabelaAlunoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAlunoMouseClicked
        if (evt.getClickCount() == 2) {
            //confere se foram dados dois cliques em uma mesma linha
            DefaultTableModel model = (DefaultTableModel) tabelaAluno.getModel();
            //pega o modelo da tabela
            int linha = tabelaAluno.getSelectedRow();
            //pega a linha que está selecionada

            try {
                conn = Conexao.getConnection();
                //faz a conexão

                Statement stmt = conn.createStatement();
                //faz o statement
                String mat = String.valueOf(tabelaAluno.getValueAt(linha, 1));

                String cmd = "SELECT COUNT(CodAut) as qtdAut FROM autorizacao"
                        + " WHERE MatAl like '" + mat + "'";

                stmt.execute(cmd);

                ResultSet result = stmt.getResultSet();
                //variável que confere os resultados do SELECT
                
                Alun a = null;
                
                if (result.next()) {

                    a = new Alun(String.valueOf(tabelaAluno.getValueAt(linha, 0)),
                            String.valueOf(tabelaAluno.getValueAt(linha, 1)),
                            String.valueOf(tabelaAluno.getValueAt(linha, 2)),
                            String.valueOf(tabelaAluno.getValueAt(linha, 3)),
                            String.valueOf(result.getInt("qtdAut")));
                }
                //objeto aluno que será ultilizado para inserir os dados na próxima tela, pegando os valores de
                //cada linha e coluna
                DadosAluno in = new DadosAluno();
                in.setAs(a);
                in.alterarTexto();
                in.setUs(us);
                //chama as funções para alterar os campos
                in.setVisible(true);
                //sai dessa para a próxima tela, que contem os dados do aluno
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_tabelaAlunoMouseClicked


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PesquisaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PesquisaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PesquisaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PesquisaAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PesquisaAluno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butPesquiAluno;
    private javax.swing.JButton butRegistrarAluno;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JMenu menuSair;
    private javax.swing.JMenu nomeAdm;
    private javax.swing.JTable tabelaAluno;
    private javax.swing.JTextField txtPesqui;
    // End of variables declaration//GEN-END:variables
}
