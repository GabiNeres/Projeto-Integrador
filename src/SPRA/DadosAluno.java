/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SPRA;

import static java.lang.Integer.parseInt;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import static java.lang.Integer.parseInt;
import static java.lang.Integer.parseInt;
import static java.lang.Integer.parseInt;

/**
 *
 * @author 20131064010070
 */
public class DadosAluno extends javax.swing.JFrame {

    /**
     * Creates new form Aluno
     */
    public DadosAluno() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    User us;
    //variavel do tipo User que servirá para pegar os dados do Administrador

    public User getUs() {
        return us;
    }

    public void setUs(User us) {
        this.us = us;
    }
    //gets e sets da variavel us

    Connection conn = null;
    //inicializa a variavel da conexão com o banco de dados

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        labelMatAl = new javax.swing.JLabel();
        labelNomeAl = new javax.swing.JLabel();
        labelTurmaAl = new javax.swing.JLabel();
        labelQtdAut = new javax.swing.JLabel();
        labelIdadeAl = new javax.swing.JLabel();
        alt1 = new javax.swing.JRadioButton();
        aut2 = new javax.swing.JRadioButton();
        aut3 = new javax.swing.JRadioButton();
        labelData = new javax.swing.JLabel();
        labelHora = new javax.swing.JLabel();
        labelMotivo = new javax.swing.JLabel();
        txtQtdAut = new javax.swing.JTextField();
        butApagarAluno = new javax.swing.JButton();
        txtDataAut = new javax.swing.JTextField();
        txtHoraAut = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMotAut = new javax.swing.JTextArea();
        butAddAut = new javax.swing.JButton();
        txtMatAl = new javax.swing.JTextField();
        txtTurmaAl = new javax.swing.JTextField();
        txtNomeAl = new javax.swing.JTextField();
        txtIdadeAl = new javax.swing.JTextField();

        jPanel4.setBackground(new java.awt.Color(204, 255, 204));
        jPanel4.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jPanel4ComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel4ComponentShown(evt);
            }
        });

        labelMatAl.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        labelMatAl.setText("Matrícula:");

        labelNomeAl.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        labelNomeAl.setText("Nome Completo:");

        labelTurmaAl.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        labelTurmaAl.setText("Turma:");

        labelQtdAut.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        labelQtdAut.setText("Quantidade de autorizações:");

        labelIdadeAl.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        labelIdadeAl.setText("Idade:");

        alt1.setBackground(new java.awt.Color(204, 255, 204));
        buttonGroup1.add(alt1);
        alt1.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        alt1.setText("Ver 1ª autorização");
        alt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alt1ActionPerformed(evt);
            }
        });

        aut2.setBackground(new java.awt.Color(204, 255, 204));
        buttonGroup1.add(aut2);
        aut2.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        aut2.setText("Ver 2ª autorização");
        aut2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aut2ActionPerformed(evt);
            }
        });

        aut3.setBackground(new java.awt.Color(204, 255, 204));
        buttonGroup1.add(aut3);
        aut3.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        aut3.setText("Ver 3ª autorização");
        aut3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aut3ActionPerformed(evt);
            }
        });

        labelData.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        labelData.setText("Data:");

        labelHora.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        labelHora.setText("Hora:");

        labelMotivo.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        labelMotivo.setText("Motivo:");

        txtQtdAut.setEditable(false);

        butApagarAluno.setText("Apagar registro do aluno");
        butApagarAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butApagarAlunoActionPerformed(evt);
            }
        });

        txtDataAut.setEditable(false);

        txtHoraAut.setEditable(false);

        txtMotAut.setEditable(false);
        txtMotAut.setColumns(20);
        txtMotAut.setLineWrap(true);
        txtMotAut.setRows(5);
        jScrollPane1.setViewportView(txtMotAut);

        butAddAut.setText("Adicionar nova autorização");
        butAddAut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAddAutActionPerformed(evt);
            }
        });

        txtMatAl.setEditable(false);

        txtTurmaAl.setEditable(false);

        txtNomeAl.setEditable(false);
        txtNomeAl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeAlActionPerformed(evt);
            }
        });

        txtIdadeAl.setEditable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(butAddAut))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(alt1)
                                    .addComponent(aut2)
                                    .addComponent(aut3))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(labelData)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtDataAut, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(labelHora)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtHoraAut, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(labelMotivo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(166, 166, 166))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(labelMatAl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMatAl, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelTurmaAl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTurmaAl))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(labelQtdAut)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQtdAut, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(labelNomeAl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNomeAl, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelIdadeAl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIdadeAl)))))
                .addGap(54, 54, 54))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(butApagarAluno)
                .addGap(32, 32, 32))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane1, txtDataAut, txtHoraAut});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(butApagarAluno)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMatAl)
                    .addComponent(labelTurmaAl)
                    .addComponent(txtMatAl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTurmaAl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNomeAl)
                    .addComponent(labelIdadeAl)
                    .addComponent(txtNomeAl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdadeAl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelQtdAut)
                    .addComponent(txtQtdAut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(butAddAut)
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelData)
                    .addComponent(txtDataAut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alt1))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelHora)
                            .addComponent(txtHoraAut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelMotivo)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(aut2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(aut3)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel4ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel4ComponentShown

    }//GEN-LAST:event_jPanel4ComponentShown

    private void jPanel4ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel4ComponentHidden

    }//GEN-LAST:event_jPanel4ComponentHidden

    private void butApagarAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butApagarAlunoActionPerformed
        int i = 0;

        try {
            conn = Conexao.getConnection();
            //inicia a conexão
            Statement stmt = conn.createStatement();
            //inicializa o statement

            i = stmt.executeUpdate("DELETE  "
                    + "FROM autorizacao "
                    + "WHERE MatAl like '" + txtMatAl.getText() + "' ;");
            //executa o comando delete do mysql para apagar os dados da autorização e do aluno
            //cuja a matricula for igual a da tela
            
            if (i != 0){
                int a = stmt.executeUpdate("DELETE  "
                    + "FROM aluno "
                    + "WHERE MatAl like '" + txtMatAl.getText() + "' ;");
                
                if (a != 0){
                    JOptionPane.showMessageDialog(null, "SUCESSO! Aluno excluído.", "Mensagem",
                                    JOptionPane.INFORMATION_MESSAGE);
                    this.setVisible(false);
                }
            }

            stmt.close();
            conn.close();
            //fecha a conexão
        } catch (Exception e) {
            e.printStackTrace();
            //trata de exceções
        }
    }//GEN-LAST:event_butApagarAlunoActionPerformed

    private void txtNomeAlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeAlActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtNomeAlActionPerformed

    private void butAddAutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAddAutActionPerformed
        if (parseInt(txtQtdAut.getText()) == 3) {
            JOptionPane.showMessageDialog(null, "O aluno já tem três autorizações. \n"
                    + "Apague-o e o registre novamente!", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
            //mensagem de erro caso algum campo não for preenchido
        } else {

            RegistroAutorizacao in = new RegistroAutorizacao();
            Alun al = new Alun(txtMatAl.getText());
            in.setAs(al);
            in.alterarAlu();
            in.setUs(us);
            in.setVisible(true);
            //vai para a tela de registro de autorizações com a matricula já inserida lá
        }
    }//GEN-LAST:event_butAddAutActionPerformed

    private void alt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alt1ActionPerformed
        try {

            conn = Conexao.getConnection();
            //inicia a conexão

            Statement stmt = conn.createStatement();
            //inicia o Statement

            String pesq = "SELECT MIN(CodAut) as CodAut FROM autorizacao "
                    + "WHERE MatAl like '" + txtMatAl.getText() + "';";
            //String com comando select do MySQL que será ultilizada para selecionar o código da autorização

            stmt.execute(pesq);
            //realizando o select

            ResultSet result = stmt.getResultSet();
            //variável que pegara os resultados do select

            if (result.next()) {
                String cmd = "SELECT * from autorizacao "
                        + "WHERE CodAut =  " + result.getInt("CodAut") + "";
                stmt.execute(cmd);
                //se existir resultado, fará outra pesquisa, que pegará todas as informações 
                //sobre aquela autoriação

                ResultSet resultado = stmt.getResultSet();
                //variável que pegará os resultados do ultimo select

                while (resultado.next()) {
                    txtDataAut.setText(resultado.getString("Data_Pego"));
                    txtHoraAut.setText(resultado.getString("Hora_Pego"));
                    txtMotAut.setText(resultado.getString("Motivo"));
                    //mudará os campos com os resultados do select
                }
            }

            stmt.close();
            conn.close();
            //fecha a conexao

        } catch (Exception e) {
            e.printStackTrace();
            //trata de exceções
        }

    }//GEN-LAST:event_alt1ActionPerformed

    private void aut3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aut3ActionPerformed
        // TODO add your handling code here:
        if (parseInt(txtQtdAut.getText()) == 1) {
            txtDataAut.setText("");
            txtHoraAut.setText("");
            txtMotAut.setText("");
            //confere quantas autorizações existem, pois se for apenas uma, não será necessário mudar os campos
        } else if (parseInt(txtQtdAut.getText()) == 2) {
            txtDataAut.setText("");
            txtHoraAut.setText("");
            txtMotAut.setText("");
            //confere quantas autorizações existem, pois se for apenas duas, não será necessário mudar os campos
        } else if (parseInt(txtQtdAut.getText()) == 3) {
            //confere quantas autorizações existem, se for três, essa função será necessária

            try {
                conn = Conexao.getConnection();
                //inicia a conexão

                Statement stmt = conn.createStatement();
                //inicia o statement

                String pesq = "SELECT MAX(CodAut) as CodAut FROM autorizacao "
                        + "WHERE MatAl like '" + txtMatAl.getText() + "';";
                //String com comando SELECT do MySQL que será executada selecionando a maior das autorizações

                stmt.execute(pesq);
                //executando o comando acima

                ResultSet result = stmt.getResultSet();
                //variável que ira pegar os resultados do comando select

                if (result.next()) {
                    String cmd = "SELECT * from autorizacao "
                            + "WHERE CodAut = " + result.getInt("CodAut") + "";
                    stmt.execute(cmd);
                    //se existir um resultado, fara outro select, pegando agora todos os dados daquela autorização

                    ResultSet resultado = stmt.getResultSet();
                    //variavel que pegará os resultados do select

                    while (resultado.next()) {
                        txtDataAut.setText(resultado.getString("Data_Pego"));
                        txtHoraAut.setText(resultado.getString("Hora_Pego"));
                        txtMotAut.setText(resultado.getString("Motivo"));
                        //preenche os campos com as informações 
                    }
                }

                stmt.close();
                conn.close();
                //fecha a conexão

            } catch (Exception e) {
                e.printStackTrace();
                //trata as exceções
            }
        }

    }//GEN-LAST:event_aut3ActionPerformed

    private void aut2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aut2ActionPerformed
        // TODO add your handling code here:
        try {

            conn = Conexao.getConnection();
            //inicia a conexao

            Statement stmt = conn.createStatement();
            //inicia o statement

            String pesq = null;

            if (parseInt(txtQtdAut.getText()) == 1) {
                txtDataAut.setText("");
                txtHoraAut.setText("");
                txtMotAut.setText("");
                //confere quantas autorizações existem, pois se for apenas uma, não será necessário mudar os campos
            } else if (parseInt(txtQtdAut.getText()) == 2) {
                //confere quantas autorizações existem, se for duas, essa função será necessária

                pesq = "SELECT MAX(CodAut) as CodAut FROM autorizacao "
                        + "WHERE MatAl like '" + txtMatAl.getText() + "';";
                //String com comando SELECT do MySQL que será executada selecionando a maior das autorizações

            } else if (parseInt(txtQtdAut.getText()) == 3) {
                int minCode = 0;
                int maxCode = 0;

                String max = "SELECT MAX(CodAut) as CodAut FROM autorizacao "
                        + "WHERE MatAl like '" + txtMatAl.getText() + "';";
                stmt.execute(max);
                ResultSet res = stmt.getResultSet();

                if (res.next()) {
                    maxCode = res.getInt("CodAut");
                }

                String min = "SELECT MIN(CodAut) as CodAut FROM autorizacao "
                        + "WHERE MatAl like '" + txtMatAl.getText() + "';";
                stmt.execute(min);
                ResultSet resu = stmt.getResultSet();

                if (resu.next()) {
                    minCode = resu.getInt("CodAut");
                }

                pesq = "SELECT CodAut FROM autorizacao "
                        + "WHERE MatAl like '" + txtMatAl.getText() + "' "
                        + "AND CodAut < " + maxCode + " AND CodAut >" + minCode + " ;";
            }

            stmt.execute(pesq);
            //executando o codigo acima

            ResultSet result = stmt.getResultSet();
            //variável que conterá os resultados do comando select

            if (result.next()) {
                String cmd = "SELECT * from autorizacao "
                        + "WHERE CodAut = " + result.getInt("CodAut") + "";
                stmt.execute(cmd);
                //se existir um resultado, fará outro select, pegando as informações daquele CodAut

                ResultSet resultado = stmt.getResultSet();
                //pega os resultados desse select

                while (resultado.next()) {
                    txtDataAut.setText(resultado.getString("Data_Pego"));
                    txtHoraAut.setText(resultado.getString("Hora_Pego"));
                    txtMotAut.setText(resultado.getString("Motivo"));
                    //muda  os campos para os valores do resultado do select
                }
            }

            stmt.close();
            conn.close();
            //fecha a conexão
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_aut2ActionPerformed

    Alun as;

    public Alun getAs() {
        return as;
    }

    public void setAs(Alun as) {
        this.as = as;
    }

    public void alterarTexto() {
        txtNomeAl.setText(as.getNome());
        txtMatAl.setText(as.getMatr());
        txtIdadeAl.setText(as.getIdade());
        txtTurmaAl.setText(as.getTurma());
        txtQtdAut.setText(as.getQtdAut());
    }
    //variavel do tipo aluno, que vai pegar e mudar os valores e alterar os campos na tela

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DadosAluno.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DadosAluno.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DadosAluno.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DadosAluno.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DadosAluno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton alt1;
    private javax.swing.JRadioButton aut2;
    private javax.swing.JRadioButton aut3;
    private javax.swing.JButton butAddAut;
    private javax.swing.JButton butApagarAluno;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelData;
    private javax.swing.JLabel labelHora;
    private javax.swing.JLabel labelIdadeAl;
    private javax.swing.JLabel labelMatAl;
    private javax.swing.JLabel labelMotivo;
    private javax.swing.JLabel labelNomeAl;
    private javax.swing.JLabel labelQtdAut;
    private javax.swing.JLabel labelTurmaAl;
    private javax.swing.JTextField txtDataAut;
    private javax.swing.JTextField txtHoraAut;
    private javax.swing.JTextField txtIdadeAl;
    private javax.swing.JTextField txtMatAl;
    private javax.swing.JTextArea txtMotAut;
    private javax.swing.JTextField txtNomeAl;
    private javax.swing.JTextField txtQtdAut;
    private javax.swing.JTextField txtTurmaAl;
    // End of variables declaration//GEN-END:variables
}
